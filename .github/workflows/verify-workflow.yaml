name: Verify

# Controls when the action will run.
on:
  workflow_call:
    secrets:
      IBMCLOUD_API_KEY:
        required: true
      AWS_CLUSTER_USERNAME:
        required: true
      AWS_CLUSTER_PASSWORD:
        required: true
      AZURE_CLUSTER_USERNAME:
        required: true
      AZURE_CLUSTER_PASSWORD:
        required: true
      AZURE_CLUSTER_CA_CERT:
        required: true
      OPENSHIFT_SERVER:
        required: true
      OPENSHIFT_USER:
        required: true
      OPENSHIFT_PASSWORD:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install_runner:
    name: Install Runner
    runs-on: ubuntu-20.04

    steps:
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_username: ${{ secrets.OPENSHIFT_USER }}
          openshift_password: ${{ secrets.OPENSHIFT_PASSWORD }}

      - uses: redhat-actions/openshift-actions-runner-installer@v1
        with:
          github_pat: ${{ secrets.GITHUB_PAT }}     # Personal access token with organization permissions
          runner_image: quay.io/cloudnativetoolkit/github-terraform-runner
          runner_tag: cli-tools-core
          runner_labels: cli-tools-core,ocp-login
          runner_replicas: 2
          helm_extra_args: |
            --set-string secretName=github-pat-ocp-login

  verify:
    needs: install_runner
    runs-on: [ self-hosted, cli-tools-core, ocp-login ]

    strategy:
      matrix:
        testcase:
          - ibm_ocp410
          - azure_latest_gitops
      fail-fast: false

    env:
      HOME: /home/devops

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - id: variables
        name: Set up variables
        env:
          AWS_CLUSTER_USERNAME: ${{ secrets.AWS_CLUSTER_USERNAME }}
          AWS_CLUSTER_PASSWORD: ${{ secrets.AWS_CLUSTER_PASSWORD }}
          AZURE_CLUSTER_USERNAME: ${{ secrets.AZURE_CLUSTER_USERNAME }}
          AZURE_CLUSTER_PASSWORD: ${{ secrets.AZURE_CLUSTER_PASSWORD }}
          AZURE_CLUSTER_CA_CERT: ${{ secrets.AZURE_CLUSTER_CA_CERT }}
          IBM_CLUSTER_USERNAME: "apikey"
          IBM_CLUSTER_PASSWORD: ${{ secrets.IBMCLOUD_API_KEY }}
          ENVIRONMENT: ${{ matrix.testcase }}
        shell: bash
        run: |
          if [[ $ENVIRONMENT =~ ^aws ]]; then
            echo "::set-output name=CLUSTER_USERNAME::$AWS_CLUSTER_USERNAME"
            echo "::set-output name=CLUSTER_PASSWORD::$AWS_CLUSTER_PASSWORD"
          elif [[ $ENVIRONMENT =~ ^azure ]]; then
            echo "::set-output name=CLUSTER_USERNAME::$AZURE_CLUSTER_USERNAME"
            echo "::set-output name=CLUSTER_PASSWORD::$AZURE_CLUSTER_PASSWORD"
            echo "::set-output name=CLUSTER_CA_CERT::$AZURE_CLUSTER_CA_CERT"
          else 
            echo "::set-output name=CLUSTER_USERNAME::$IBM_CLUSTER_USERNAME"
            echo "::set-output name=CLUSTER_PASSWORD::$IBM_CLUSTER_PASSWORD"
          fi

      - name: Verify deploy on ${{ matrix.testcase }}
        uses: cloud-native-toolkit/action-module-verify-deploy@main
        with:
          clusterId: ${{ matrix.testcase }}
          validateDeployScript: .github/scripts/validate-deploy.sh
        env:
          TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
          TF_VAR_cluster_username: ${{ steps.variables.outputs.CLUSTER_USERNAME }}
          TF_VAR_cluster_password: ${{ steps.variables.outputs.CLUSTER_PASSWORD }}
          TF_VAR_cluster_ca_cert: ${{ steps.variables.outputs.CLUSTER_CA_CERT }}
          IBMCLOUD_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}

      - name: Verify destroy on ${{ matrix.testcase }}
        uses: cloud-native-toolkit/action-module-verify-destroy@main
        if: ${{ always() }}
        with:
          clusterId: ${{ matrix.testcase }}
        env:
          TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
          TF_VAR_cluster_username: ${{ steps.variables.outputs.CLUSTER_USERNAME }}
          TF_VAR_cluster_password: ${{ steps.variables.outputs.CLUSTER_PASSWORD }}
          TF_VAR_cluster_ca_cert: ${{ steps.variables.outputs.CLUSTER_CA_CERT }}
          IBMCLOUD_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
